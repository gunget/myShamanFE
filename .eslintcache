[{"D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\index.js":"1","D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\App.js":"2","D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\Home.jsx":"3","D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\DirectorsList.jsx":"4","D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\FilmoItem.jsx":"5","D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\contexts\\Contexts.jsx":"6","D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\SearchDirector.jsx":"7","D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\MenuDirectorList.jsx":"8","D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\PageSearch.jsx":"9","D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\SectionDirector.jsx":"10","D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\SectionFicWtr.jsx":"11","D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\SectionNonFicWtr.jsx":"12","D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\SectionOthers.jsx":"13","D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\SearchFicWtr.jsx":"14","D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\FicWriterList.jsx":"15","D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\useFetch.jsx":"16"},{"size":432,"mtime":1612261363307,"results":"17","hashOfConfig":"18"},{"size":204,"mtime":1612260138094,"results":"19","hashOfConfig":"18"},{"size":20278,"mtime":1616315270778,"results":"20","hashOfConfig":"18"},{"size":3240,"mtime":1616305372459,"results":"21","hashOfConfig":"18"},{"size":416,"mtime":1611475419961,"results":"22","hashOfConfig":"18"},{"size":1679,"mtime":1616116212318,"results":"23","hashOfConfig":"18"},{"size":4519,"mtime":1616307407004,"results":"24","hashOfConfig":"18"},{"size":576,"mtime":1615090793931,"results":"25","hashOfConfig":"18"},{"size":3626,"mtime":1615271236743,"results":"26","hashOfConfig":"18"},{"size":1011,"mtime":1614947012541,"results":"27","hashOfConfig":"18"},{"size":1027,"mtime":1616118986559,"results":"28","hashOfConfig":"18"},{"size":1007,"mtime":1614947094701,"results":"29","hashOfConfig":"18"},{"size":978,"mtime":1614947127955,"results":"30","hashOfConfig":"18"},{"size":3532,"mtime":1616307111983,"results":"31","hashOfConfig":"18"},{"size":3783,"mtime":1616303822209,"results":"32","hashOfConfig":"18"},{"size":1308,"mtime":1616310266225,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"m9esvp",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":28,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"36"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"36"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\index.js",[],["76","77"],"D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\App.js",[],"D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\Home.jsx",["78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105"],"D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\DirectorsList.jsx",["106"],"import React, { useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { StateContext } from \"../contexts/Contexts.jsx\";\r\n\r\n// List image\r\nimport frtImg2 from \"../images/frontImage2.jpg\";\r\n\r\n// material ui import\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    maxWidth: \"100%\",\r\n    margin: \"0 auto\",\r\n  },\r\n  media: {\r\n    height: 140,\r\n  },\r\n});\r\n\r\nconst DirectorsList = ({ fetchDirectorInfo }) => {\r\n  const states = useContext(StateContext);\r\n  const classes = useStyles();\r\n\r\n  const delPeopleCode = (e) => {\r\n    e.preventDefault();\r\n\r\n    const id = e.target.parentNode.parentNode.parentNode.parentNode.dataset.id;\r\n\r\n    const confirm = window.confirm(\"정말 삭제하시겠습니까?\");\r\n    if (confirm) {\r\n      axios\r\n        .delete(`http://localhost:8000/api/directorInfo/${id}/`)\r\n        .then(() => {\r\n          fetchDirectorInfo();\r\n        })\r\n        .catch((err) => console.log(\"삭제실패:\", err));\r\n    }\r\n  };\r\n  const list = states.loadings.directorInitLoading\r\n    ? \"loading...\"\r\n    : states.directors.map((data) => {\r\n        const link = `https://movie.naver.com/movie/bi/pi/filmo.nhn?code=${data.peopleCode}#tab`;\r\n\r\n        return (\r\n          <article\r\n            id={data.name}\r\n            key={data.id}\r\n            data-id={data.id}\r\n            data-peoplecode={data.peopleCode}\r\n          >\r\n            <Card className={classes.root}>\r\n              <CardActionArea href={link} target=\"_blank\" rel=\"noreferrer\">\r\n                <CardMedia\r\n                  className={classes.media}\r\n                  image={data.image}\r\n                  title=\"from artvee.com\"\r\n                />\r\n                <CardContent>\r\n                  <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                    {data.name}\r\n                  </Typography>\r\n                  <Typography\r\n                    variant=\"body2\"\r\n                    color=\"textSecondary\"\r\n                    component=\"p\"\r\n                  >\r\n                    {data.wisesaying}&nbsp; &nbsp;\r\n                    <i class=\"far fa-grin-squint-tears\"></i>\r\n                  </Typography>\r\n                </CardContent>\r\n              </CardActionArea>\r\n              <CardActions data-id={data.id}>\r\n                <Button\r\n                  href={link}\r\n                  target=\"_blank\"\r\n                  rel=\"noreferrer\"\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                >\r\n                  Go Naver Movie\r\n                </Button>\r\n                <Button onClick={delPeopleCode} size=\"small\" color=\"secondary\">\r\n                  Delete\r\n                </Button>\r\n              </CardActions>\r\n            </Card>\r\n          </article>\r\n        );\r\n      });\r\n  return <>{list}</>;\r\n};\r\n\r\nexport default DirectorsList;\r\n","D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\FilmoItem.jsx",[],["107","108"],"D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\contexts\\Contexts.jsx",[],"D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\SearchDirector.jsx",[],"D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\MenuDirectorList.jsx",["109"],"import React, { useContext } from \"react\";\r\nimport { StateContext } from \"../contexts/Contexts.jsx\";\r\n\r\nconst MenuDirectorList = ({ handleAdd }) => {\r\n  const states = useContext(StateContext);\r\n  const list = states\r\n    ? states.directors.map((data) => {\r\n        return (\r\n          <li key={data.id}>\r\n            <a onClick={() => handleAdd(data.name)}>\r\n              <span className=\"korean\">📢 {data.name}</span>\r\n            </a>\r\n          </li>\r\n        );\r\n      })\r\n    : \"Lists are not Loaded.\";\r\n  return <>{list}</>;\r\n};\r\n\r\nexport default MenuDirectorList;\r\n","D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\PageSearch.jsx",["110"],"import React, { useRef } from \"react\";\r\n\r\n//material ui\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport Select from \"@material-ui/core/Select\";\r\n\r\n//1. material ui CSS overriding 방법\r\n//컴포넌트들은 classes att로 기본 Css를 바꿀 수 있는데, 바꾸려면 해당 컴포넌트의\r\n//className이 DevTool상 뭐라고 나오는지 알아야 한다\r\n//보통 'Mui컴포넌트종류명-root등의 rule명'으로 여러개가 나오는데, 이중 하나만 매치시키면 된다\r\n//이걸 clsss={{root: classes.root}}형식으로 컴포넌트에 넣어서 갈아 끼우는 것\r\n//주의할 점은 input이나 inputBase처럼 DevTool상에는 나오는데 코드에서는 접근 불가능한\r\n//경우도 있는데, 이것은 해당컴포넌트가 이들을 상속받고 있는 것이므로, 따라가서 rule명을 확인하면 된다\r\n//대게는 root를 쓰면 그냥 적용될 듯\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    fontFamily: \"serif\",\r\n    fontWeight: \"700\",\r\n    fontSize: \"0.8em\",\r\n    letterSpacing: \"0.5px\",\r\n    opacity: \"0.7\",\r\n    textTransform: \"uppercase\",\r\n  },\r\n  formControl: {\r\n    minWidth: 120,\r\n    width: \"95%\",\r\n    marginLeft: \"7px\",\r\n  },\r\n  label: {\r\n    fontFamily: \"serif\",\r\n    fontWeight: \"800\",\r\n    letterSpacing: \"1px\",\r\n  },\r\n  menuitem: {\r\n    fontFamily: \"serif\",\r\n    fontWeight: \"500\",\r\n    fontSize: \"1em\",\r\n    letterSpacing: \"1px\",\r\n  },\r\n}));\r\n\r\nconst PageSearch = ({ handleChange }) => {\r\n  const inputRef = useRef();\r\n\r\n  const handleFind = (e) => {\r\n    e.preventDefault();\r\n    const element = document.createElement(\"a\");\r\n    element.setAttribute(\"href\", `#${inputRef.current.value}`);\r\n    element.click();\r\n  };\r\n\r\n  //material ui\r\n  const classes = useStyles();\r\n\r\n  //select전환 시 화면이 해당 카테고리로 넘어가도록 설정\r\n  const selectChange = (e) => {\r\n    const selectID = Number(e.target.value);\r\n    handleChange(null, selectID);\r\n  };\r\n\r\n  return (\r\n    <section id=\"search\" className=\"alt\">\r\n      <FormControl className={classes.formControl}>\r\n        <InputLabel\r\n          id=\"demo-simple-select-label\"\r\n          classes={{ root: classes.label }}\r\n        >\r\n          Catagory\r\n        </InputLabel>\r\n        <Select\r\n          classes={{\r\n            root: classes.root,\r\n          }} //상속받은 컴포넌트의 root에도 이게 적용된다.\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          // value={age}\r\n          autoWidth=\"true\"\r\n          onChange={selectChange}\r\n        >\r\n          <MenuItem classes={{ root: classes.menuitem }} value={0}>\r\n            Movie Director\r\n          </MenuItem>\r\n          <MenuItem classes={{ root: classes.menuitem }} value={1}>\r\n            Fiction Writer\r\n          </MenuItem>\r\n          <MenuItem classes={{ root: classes.menuitem }} value={2}>\r\n            Nonfiction Writer\r\n          </MenuItem>\r\n          <MenuItem classes={{ root: classes.menuitem }} value={3}>\r\n            The Others\r\n          </MenuItem>\r\n        </Select>\r\n      </FormControl>\r\n      <form method=\"post\" action=\"#\" onSubmit={handleFind}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"query\"\r\n          id=\"query\"\r\n          placeholder=\"이름 검색 (Full Name)\"\r\n          ref={inputRef}\r\n        />\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default PageSearch;\r\n","D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\SectionDirector.jsx",["111"],"import React from \"react\";\r\nimport DirectorsList from \"./DirectorsList\";\r\nimport SearchDirector from \"./SearchDirector\";\r\n\r\nconst SectionDirector = ({ fetchDirectorInfo, handleAdd }) => {\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      {/* <!-- Section Director --> */}\r\n      <section>\r\n        <header id=\"DirectorList\" className=\"major\">\r\n          <h2>Movie Director</h2>\r\n          <a onClick={() => handleAdd(\"searchNadd\")}>\r\n            <i class=\"fas fa-plus-circle\"> NEW</i>\r\n          </a>\r\n        </header>\r\n        <div className=\"posts\">\r\n          <DirectorsList fetchDirectorInfo={fetchDirectorInfo} />\r\n        </div>\r\n      </section>\r\n      {/* <!-- Section Search and Add --> */}\r\n      <section>\r\n        <header id=\"searchNadd\" className=\"major\">\r\n          <h2>Search & Add New</h2>\r\n        </header>\r\n        <div className=\"searchNadd\">\r\n          <SearchDirector fetchDirectorInfo={fetchDirectorInfo} />\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SectionDirector;\r\n","D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\SectionFicWtr.jsx",["112"],"import React from \"react\";\r\nimport FicWriterList from \"./FicWriterList\";\r\nimport SearchFictionWriter from \"./SearchFicWtr\";\r\n\r\nconst SectionFicWtr = ({ fetchFicWriterInfo, handleAdd }) => {\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      {/* <!-- Section FicWriter --> */}\r\n      <section>\r\n        <header id=\"FictionWriterList\" className=\"major\">\r\n          <h2>Fiction Writers</h2>\r\n          <a onClick={() => handleAdd(\"searchNadd\")}>\r\n            <i class=\"fas fa-plus-circle\"> NEW</i>\r\n          </a>\r\n        </header>\r\n        <div className=\"posts\">\r\n          <FicWriterList fetchFicWriterInfo={fetchFicWriterInfo} />\r\n        </div>\r\n      </section>\r\n      {/* <!-- Section Search and Add --> */}\r\n      <section>\r\n        <header id=\"searchNadd\" className=\"major\">\r\n          <h2>Search & Add New</h2>\r\n        </header>\r\n        <div className=\"searchNadd\">\r\n          <SearchFictionWriter fetchFicWriterInfo={fetchFicWriterInfo} />\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SectionFicWtr;\r\n","D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\SectionNonFicWtr.jsx",["113","114"],"import React from \"react\";\r\nimport DirectorsList from \"./DirectorsList\";\r\nimport SearchDirector from \"./SearchDirector\";\r\n\r\nconst SectionNonFicWtr = ({ fetchDirectorInfo, handleAdd }) => {\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      {/* <!-- Section Director --> */}\r\n      <section>\r\n        <header id=\"NonFictionWriterList\" className=\"major\">\r\n          <h2>NonFiction Writers</h2>\r\n          <a onClick={() => handleAdd(\"searchNadd\")}>\r\n            <i class=\"fas fa-plus-circle\"> NEW</i>\r\n          </a>\r\n        </header>\r\n        <div className=\"posts\">\r\n          <article>NonFiction Writers</article>\r\n        </div>\r\n      </section>\r\n      {/* <!-- Section Search and Add --> */}\r\n      <section>\r\n        <header id=\"searchNadd\" className=\"major\">\r\n          <h2>Search & Add New</h2>\r\n        </header>\r\n        <div className=\"searchNadd\">\r\n          <SearchDirector fetchDirectorInfo={fetchDirectorInfo} />\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SectionNonFicWtr;\r\n","D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\SectionOthers.jsx",["115","116"],"import React from \"react\";\r\nimport DirectorsList from \"./DirectorsList\";\r\nimport SearchDirector from \"./SearchDirector\";\r\n\r\nconst SectionOthers = ({ fetchDirectorInfo, handleAdd }) => {\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      {/* <!-- Section Director --> */}\r\n      <section>\r\n        <header id=\"TheOthersList\" className=\"major\">\r\n          <h2>The Others</h2>\r\n          <a onClick={() => handleAdd(\"searchNadd\")}>\r\n            <i class=\"fas fa-plus-circle\"> NEW</i>\r\n          </a>\r\n        </header>\r\n        <div className=\"posts\">\r\n          <article>The Others</article>\r\n        </div>\r\n      </section>\r\n      {/* <!-- Section Search and Add --> */}\r\n      <section>\r\n        <header id=\"searchNadd\" className=\"major\">\r\n          <h2>Search & Add New</h2>\r\n        </header>\r\n        <div className=\"searchNadd\">\r\n          <SearchDirector fetchDirectorInfo={fetchDirectorInfo} />\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SectionOthers;\r\n","D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\SearchFicWtr.jsx",["117"],"import React, { useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst SearchFictionWriter = ({ fetchFicWriterInfo }) => {\r\n  const [peopleCode, setPeopleCode] = useState(\"You don't seach anything yet.\");\r\n\r\n  const inputRef = useRef(null);\r\n\r\n  const savePeopleCode = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let data = new FormData();\r\n    data.append(\"name\", inputRef.current.value);\r\n    data.append(\"peopleCode\", Number(peopleCode));\r\n    // let data2 = {\r\n    //   // name: searchWord,\r\n    //   name: inputRef.current.value,\r\n    //   peopleCode: Number(peopleCode),\r\n    //   image: pickedFile,\r\n    //   // fbooks: 1, //반드시 DRF API상의 변수와 값을 맞춰줘야 한다. 틀리면 어디에 넣을지 모르므로\r\n    // };\r\n    await axios\r\n      .post(\"http://127.0.0.1:8000/api/ficWriterInfo/\", data) // (url, data, 헤더정보)순\r\n      .then(() => {\r\n        setPeopleCode(\"You don't seach anything yet.\");\r\n        inputRef.current.value = \"\";\r\n        fetchFicWriterInfo();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setPeopleCode(\"저장할 수 없습니다.\");\r\n      });\r\n  };\r\n\r\n  // const handleUpload = (e) => {\r\n  //   e.preventDefault();\r\n  //   pickedFile = e.target.files[0];\r\n  // };\r\n\r\n  const getPeopleCode = async (e) => {\r\n    e.preventDefault();\r\n    setPeopleCode(\"Now Searching...\");\r\n    await axios\r\n      .get(\"http://127.0.0.1:8000/getPpWriter/\", {\r\n        params: {\r\n          searchWtr: inputRef.current.value,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        console.log(res);\r\n        setPeopleCode(res.data);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n        setPeopleCode(\"검색 결과가 없습니다. 다시 검색하세요.\");\r\n      });\r\n  };\r\n\r\n  const handleFileAdd = () => {\r\n    // const inputWindow = document.getElementById(\"fileAdd\");\r\n    // inputWindow.click();\r\n  };\r\n\r\n  return (\r\n    <div className=\"container search2\">\r\n      <div id=\"search2\" className=\"alt\">\r\n        <form method=\"post\" action=\"#\" onSubmit={getPeopleCode}>\r\n          <input\r\n            type=\"text\"\r\n            name=\"query\"\r\n            id=\"query\"\r\n            placeholder=\"작가 이름을 입력하세요.\"\r\n            ref={inputRef}\r\n          />\r\n          <div class=\"button\" onClick={getPeopleCode}>\r\n            Search\r\n          </div>\r\n        </form>\r\n      </div>\r\n      <div className=\"alt2\">\r\n        <h3 className=\"korean\"> [ 네이버 인물정보 코드 : {peopleCode} ] </h3>\r\n        <p className=\"korean\">\r\n          인물코드가 나오면 DB에 저장하세요. 0번은 검색결과가 없다는 의미입니다.\r\n        </p>\r\n        <form method=\"post\" action=\"#\">\r\n          <input\r\n            id=\"fileAdd\"\r\n            type=\"file\"\r\n            // onChange={handleUpload}\r\n            placeholder=\"첨부할 파일을 선택하세요.\"\r\n          ></input>\r\n          {/* <div class=\"button\" onClick={handleFileAdd}>\r\n            ADD Image\r\n          </div> */}\r\n          <div class=\"button\" onClick={savePeopleCode}>\r\n            Save DB\r\n          </div>\r\n        </form>\r\n      </div>\r\n      {/* <ul dangerouslySetInnerHTML={{ __html: responsedCode }}></ul> */}\r\n      {/* 전달받은 string을 엘러먼트로 살려서 표시하기. 보안상 위험 */}\r\n      {/* <form>\r\n        <input type=\"text\" ref={inputRef}></input>\r\n        <button onClick={getPeopleCode}>getCode</button>\r\n      </form> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchFictionWriter;\r\n","D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\FicWriterList.jsx",[],"D:\\김건\\개인자료\\JavaScript_PJT\\BYG\\FrontEnd\\myshaman\\src\\components\\useFetch.jsx",["118"],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":1,"column":28,"nodeType":"125","messageId":"126","endLine":1,"endColumn":38},{"ruleId":"123","severity":1,"message":"127","line":18,"column":8,"nodeType":"125","messageId":"126","endLine":18,"endColumn":22},{"ruleId":"128","severity":1,"message":"129","line":105,"column":6,"nodeType":"130","endLine":105,"endColumn":8,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":209,"column":23,"nodeType":"134","endLine":214,"endColumn":24},{"ruleId":"132","severity":1,"message":"133","line":230,"column":23,"nodeType":"134","endLine":235,"endColumn":24},{"ruleId":"132","severity":1,"message":"133","line":250,"column":23,"nodeType":"134","endLine":255,"endColumn":24},{"ruleId":"132","severity":1,"message":"133","line":270,"column":23,"nodeType":"134","endLine":275,"endColumn":24},{"ruleId":"132","severity":1,"message":"133","line":353,"column":19,"nodeType":"134","endLine":357,"endColumn":20},{"ruleId":"132","severity":1,"message":"133","line":374,"column":19,"nodeType":"134","endLine":378,"endColumn":20},{"ruleId":"132","severity":1,"message":"135","line":389,"column":23,"nodeType":"134","endLine":389,"endColumn":35},{"ruleId":"132","severity":1,"message":"135","line":392,"column":23,"nodeType":"134","endLine":392,"endColumn":35},{"ruleId":"132","severity":1,"message":"135","line":395,"column":23,"nodeType":"134","endLine":395,"endColumn":35},{"ruleId":"132","severity":1,"message":"135","line":398,"column":23,"nodeType":"134","endLine":398,"endColumn":35},{"ruleId":"132","severity":1,"message":"133","line":403,"column":19,"nodeType":"134","endLine":407,"endColumn":20},{"ruleId":"132","severity":1,"message":"135","line":418,"column":23,"nodeType":"134","endLine":418,"endColumn":35},{"ruleId":"132","severity":1,"message":"135","line":421,"column":23,"nodeType":"134","endLine":421,"endColumn":35},{"ruleId":"132","severity":1,"message":"135","line":424,"column":23,"nodeType":"134","endLine":424,"endColumn":35},{"ruleId":"132","severity":1,"message":"135","line":427,"column":23,"nodeType":"134","endLine":427,"endColumn":35},{"ruleId":"132","severity":1,"message":"133","line":432,"column":19,"nodeType":"134","endLine":436,"endColumn":20},{"ruleId":"132","severity":1,"message":"135","line":447,"column":23,"nodeType":"134","endLine":447,"endColumn":35},{"ruleId":"132","severity":1,"message":"135","line":450,"column":23,"nodeType":"134","endLine":450,"endColumn":35},{"ruleId":"132","severity":1,"message":"135","line":453,"column":23,"nodeType":"134","endLine":453,"endColumn":35},{"ruleId":"132","severity":1,"message":"135","line":456,"column":23,"nodeType":"134","endLine":456,"endColumn":35},{"ruleId":"132","severity":1,"message":"135","line":470,"column":19,"nodeType":"134","endLine":470,"endColumn":49},{"ruleId":"132","severity":1,"message":"135","line":479,"column":19,"nodeType":"134","endLine":479,"endColumn":49},{"ruleId":"132","severity":1,"message":"135","line":488,"column":19,"nodeType":"134","endLine":488,"endColumn":49},{"ruleId":"132","severity":1,"message":"135","line":499,"column":19,"nodeType":"134","endLine":499,"endColumn":50},{"ruleId":"132","severity":1,"message":"135","line":519,"column":19,"nodeType":"134","endLine":519,"endColumn":31},{"ruleId":"123","severity":1,"message":"136","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":15},{"ruleId":"119","replacedBy":"137"},{"ruleId":"121","replacedBy":"138"},{"ruleId":"132","severity":1,"message":"133","line":10,"column":13,"nodeType":"134","endLine":10,"endColumn":53},{"ruleId":"123","severity":1,"message":"139","line":7,"column":8,"nodeType":"125","messageId":"126","endLine":7,"endColumn":22},{"ruleId":"132","severity":1,"message":"133","line":13,"column":11,"nodeType":"134","endLine":13,"endColumn":54},{"ruleId":"132","severity":1,"message":"133","line":13,"column":11,"nodeType":"134","endLine":13,"endColumn":54},{"ruleId":"123","severity":1,"message":"140","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":21},{"ruleId":"132","severity":1,"message":"133","line":13,"column":11,"nodeType":"134","endLine":13,"endColumn":54},{"ruleId":"123","severity":1,"message":"140","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":21},{"ruleId":"132","severity":1,"message":"133","line":13,"column":11,"nodeType":"134","endLine":13,"endColumn":54},{"ruleId":"123","severity":1,"message":"141","line":59,"column":9,"nodeType":"125","messageId":"126","endLine":59,"endColumn":22},{"ruleId":"123","severity":1,"message":"142","line":1,"column":8,"nodeType":"125","messageId":"126","endLine":1,"endColumn":13},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar","'SwipeableViews' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchDirectorInfo' and 'fetchFicWriterInfo'. Either include them or remove the dependency array.","ArrayExpression",["145"],"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'frtImg2' is defined but never used.",["143"],["144"],"'FormHelperText' is defined but never used.","'DirectorsList' is defined but never used.","'handleFileAdd' is assigned a value but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"146","fix":"147"},"Update the dependencies array to be: [fetchDirectorInfo, fetchFicWriterInfo]",{"range":"148","text":"149"},[2872,2874],"[fetchDirectorInfo, fetchFicWriterInfo]"]